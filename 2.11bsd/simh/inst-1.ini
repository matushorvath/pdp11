# First stage of installation
# Boot from a tape, create and populate the root file system

set cpu 11/93
set cpu 4m
set cpu idle

set tq enabled
attach -e tq0 2.11bsd.tap

set rq enabled
set rq0 ra81
attach rq0 rq0.dsk

# disklabel

# partition size in 512 byte sectors, rounded to nearest cylinder, 714 sectors/cylinder, 1248 cylinders
# swap size must be less than 65536 sectors (limitation of the OS)
# root size should be small enough for fsck to work without a scratch file
#
# root size: floor(65536 / 714) * 714 = 91 * 714 = 64974
# swap size: floor(65536 / 714) * 714 = 91 * 714 = 64974
#    offset: 64974
# usr  size: 1248 * 714 - 64974 - 64974 = 891072 - 64974 - 64974 = 761124
#    offset: 64974 + 64974 = 129948
#
#      offset     size          cyl
# a:        0    64974         0-90
# b:    64974    64974       91-181
# c:        0   891072       0-1247
# d:   129948   761124     182-1247

expect "\r:" send "tms(0,1)\r"; continue
expect "Disk?" send "ra(0,0)\r"; continue
expect "Proceed? [y/n]" send "y\r"; continue
expect "d(isplay) D(efault) m(odify) w(rite) q(uit)?" send "m"; continue
expect "d(isplay) g(eometry) m(isc) p(artitions) q(uit)?" send "p"; continue

# partition a, root file system
expect "d(isplay) n(umber) s(elect) q(uit)?" send "s"; continue
expect "a b c d e f g h q(uit)?" send "a"; continue
expect "d(isplay) z(ero) t(ype) o(ffset) s(ize) f(rag) F(size) q(uit)?" send "s"; continue
expect "'a' size" send "64974\r"; continue
expect "d(isplay) z(ero) t(ype) o(ffset) s(ize) f(rag) F(size) q(uit)?" send "q"; continue

# partition b, swap
expect "d(isplay) n(umber) s(elect) q(uit)?" send "s"; continue
expect "a b c d e f g h q(uit)?" send "b"; continue
expect "d(isplay) z(ero) t(ype) o(ffset) s(ize) f(rag) F(size) q(uit)?" send "o"; continue
expect "'b' offset" send "64974\r"; continue
expect "d(isplay) z(ero) t(ype) o(ffset) s(ize) f(rag) F(size) q(uit)?" send "s"; continue
expect "'b' size" send "64974\r"; continue
expect "d(isplay) z(ero) t(ype) o(ffset) s(ize) f(rag) F(size) q(uit)?" send "t"; continue
expect "'b' fstype" send "swap\r"; continue
expect "d(isplay) z(ero) t(ype) o(ffset) s(ize) f(rag) F(size) q(uit)?" send "q"; continue

# partition c, whole disk
expect "d(isplay) n(umber) s(elect) q(uit)?" send "s"; continue
expect "a b c d e f g h q(uit)?" send "c"; continue
expect "d(isplay) z(ero) t(ype) o(ffset) s(ize) f(rag) F(size) q(uit)?" send "s"; continue
expect "'c' size" send "891072\r"; continue
expect "d(isplay) z(ero) t(ype) o(ffset) s(ize) f(rag) F(size) q(uit)?" send "t"; continue
expect "'c' fstype" send "unused\r"; continue
expect "d(isplay) z(ero) t(ype) o(ffset) s(ize) f(rag) F(size) q(uit)?" send "q"; continue

# partition d, usr file system
expect "d(isplay) n(umber) s(elect) q(uit)?" send "s"; continue
expect "a b c d e f g h q(uit)?" send "d"; continue
expect "d(isplay) z(ero) t(ype) o(ffset) s(ize) f(rag) F(size) q(uit)?" send "o"; continue
expect "'d' offset" send "129948\r"; continue
expect "d(isplay) z(ero) t(ype) o(ffset) s(ize) f(rag) F(size) q(uit)?" send "s"; continue
expect "'d' size" send "761124\r"; continue
expect "d(isplay) z(ero) t(ype) o(ffset) s(ize) f(rag) F(size) q(uit)?" send "t"; continue
expect "'d' fstype" send "2.11BSD\r"; continue
expect "d(isplay) z(ero) t(ype) o(ffset) s(ize) f(rag) F(size) q(uit)?" send "q"; continue

expect "d(isplay) n(umber) s(elect) q(uit)?" send "q"; continue
expect "d(isplay) g(eometry) m(isc) p(artitions) q(uit)?" send "q"; continue

expect "d(isplay) D(efault) m(odify) w(rite) q(uit)?" send "d"; continue
expect "d(isplay) D(efault) m(odify) w(rite) q(uit)?" send "w"; continue
expect "d(isplay) D(efault) m(odify) w(rite) q(uit)?" send "q"; continue

# mkfs
expect "\r:" send "tms(0,2)\r"; continue
expect "file system:" send "ra(0,0)\r"; continue
expect "file sys size" send "\r"; continue
expect "bytes per inode" send "\r"; continue
expect "interleaving factor" send "\r"; continue
expect "interleaving modulus" send "\r"; continue

# restor
expect "\r:" send "tms(0,3)\r"; continue
expect "Tape?" send "tms(0,5)\r"; continue
expect "Disk?" send "ra(0,0)\r"; continue
expect "Last chance before scribbling on disk." send "\r"; continue

# boot
expect "\r:" send "ra(0,0)unix\r"; continue

# install bootloader
expect '\n#' send "dd if=/mdec/rauboot of=/dev/rra0c count=1\r"; continue

# shut down
expect '\n#' send "halt\r"; continue

boot tq0

exit
